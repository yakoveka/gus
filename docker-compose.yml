version: "3.4"

services:
    ###> doctrine/doctrine-bundle ###
    database:
        image: postgres:${POSTGRES_VERSION:-15}-alpine
        environment:
            POSTGRES_DB: ${POSTGRES_DB:-app}
            # You should definitely change the password in production
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-!ChangeMe!}
            POSTGRES_USER: ${POSTGRES_USER:-app}
        volumes:
            - database_data:/var/lib/postgresql/data:rw
        networks:
            - gus
            # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
            # - ./docker/db/data:/var/lib/postgresql/data:rw
    php:
        image: ${IMAGES_PREFIX:-}app-php
        build:
            context: .
            target: php_prod
        restart: unless-stopped
        volumes:
            - php_socket:/var/run/php
        networks:
            - gus
        environment:
            APP_SECRET: ${APP_SECRET}
            TRUSTED_PROXIES: ${TRUSTED_PROXIES:-127.0.0.0/8,10.0.0.0/8,172.16.0.0/12,192.168.0.0/16}
            TRUSTED_HOSTS: ^${SERVER_NAME:-example\.com|localhost}$$
            # The two next lines can be removed after initial installation
            SYMFONY_VERSION: ${SYMFONY_VERSION:-}
            STABILITY: ${STABILITY:-stable}
            # Run "composer require symfony/orm-pack" to install and configure Doctrine ORM
            DATABASE_URL: ${DATABASE_URL}
            # Run "composer require symfony/mercure-bundle" to install and configure the Mercure integration

    nginx:
        image: nginx:latest
        volumes:
            - './docker/nginx:/etc/nginx/conf.d'
            - './public:/var/www/gus/public'
            - phppgadmin_data:/var/www/html/:ro
        ports:
            - "80:80"
        links:
            - 'php'
        networks:
            - gus
        depends_on:
            - php

volumes:
    php_socket:
    database_data:
    phppgadmin_data:

networks:
    gus:
